Class - пользовательский тип данных. В отличии от структур - наличие функций.

class class_name
{
	int a,b;
	int sum(int a, int b);
	int get_a() {
		return a;
	}
};

int main() {
	class_name p;
	p.a - получить доступ к полю а класса class_name
}

Инкапсуляция - ограничение доступа
	p.get_a() - получить переменную a из класса class_name

public, private, protected - типы доступа
public - доступ открыт всем, кто видит класс
private - доступ открыт самому классу, классам-друзьям
protected - доступ открыт классам, производным от данного

Показать, что ф-ция get_a - доступна всем
	public int get_a() {
		return a;
	}
Можно еще использовать 
private:
	int a,b;
public:
	int get_a() { return a; }
int b=p.get_a();

Констуктор
class_name(int a_, int b_) {
	a=a_;
	b=b_;
}

Деструктор
~class_name(...) {...}

По правилу хорошего тона нужно создавать отдельные файлы:
1) main.cpp - код main'а
2) sum.cpp - описание самого класса
3) sum.h - прототип класса 
В main.cpp и sum.cpp пишем #include "sum.h"
Компиляция - g++ main.cpp sum.cpp -o main
Запуск ./main

Task 1
Реализовать класс комплексных чисел и определить операциии: сложение, вычитаение, умножение на компл. число, деление, вычисление модуля.
