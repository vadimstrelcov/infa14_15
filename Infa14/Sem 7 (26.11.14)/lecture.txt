Команды open(), read(), close() рабботают только с регулярными файлами

DIR *opendir(const char *name); - открыть директорию
struct dirent *readdir(DIR *dirp); - чтение директории
void rewinddir(DIR *dirp); - указатель на начало директории
int closedir(DIR *dirp); - закрыть директорию

CPU -> HD -> MEM. Next CPU -> MEM.
mmap(NULL, length of upload file, PROT_READ | PROT_WRITE, MAP_SHARED xor MAP_PRIVATE, file_descriptor, offset=0 from begin file) - загрузка файла в адр пр-во
nummap( addr, length) - для обратной синхронизации файлов

ФС - абстракция устройства
Блочные, символьные, низкоуровневые - виды устройств
Символьные - обмен данными происходит побайтово
Блочными - --- блоками
Любые блочные устройства имеют файловую систему
Примеры: симв - клавиатуры, блоч - жесткие диски
Корневой католог один, систем может быть несколько
FS_1
/
home | bin | usr | volumes
FS_2
/
home | bin | usr | ...
FS_2 монтируется к FS_1 /volumes командой mount
ls /dev - все подключенные устройства
unmount /dev/sdb1 - извлечь устройство /dev/sdb1
mount /deb/sdb1 /media/flashcard

Работа с устройствами (блочными) посредством прерываниями
Аппаратными - мы не можем контралировать. Это делает система
Пр: считывание данных с ЖД. После окончания происходит прерывание, и только потом переходит к считыванию следующего файла с ЖД.
Внутренние - события в самом процессоре. Нр: деление на 0, переполнение стека, обращение к недопустимым адресам памяти. 
Программные - инициируются использованием спец инструкций в коде программы

kill options <pid> - убивание процесса
